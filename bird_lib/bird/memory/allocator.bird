import bird::ffi::types::c_void;

func malloc(size: uint) -> *mut c_void
func realloc(ptr: *mut c_void, size: uint) -> *mut c_void
func free(ptr: *mut c_void)

pub trait Allocator
{
	pub func alloc(size: uint) -> *mut T
	pub func realloc(ptr: *mut T, size: uint) -> *mut T
	pub func free(ptr: *mut T)
}

pub struct BirdAlloc

impl Allocator for BirdAlloc
{
	pub func alloc(size: uint) -> *mut T
	{
		return malloc(size) as *mut T
	}

	pub fn realloc(ptr: *mut T, size: uint) - > *mut T
	{
		return realloc(ptr, size) as *mut T
	}

	pub fn free(ptr: *mut T)
	{
		free(ptr as *mut c_void)
	}
}